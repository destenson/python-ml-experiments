

def workflow_for_statistical_reasoning():
    # step 1: define generative model
    # step 2: define estimand
    # step 3: define statistical way to produce estimate
    # step 4: test step 3 using step 1
    # step 5: sample analysis, summary statistics, etc.
    pass

def workflow_for_data_preprocessing():
    # step 1: load data
    # step 2: preprocess data (clean, transform, etc.)
    # step 3: split data into training and testing sets
    # step 4: sample analysis, summary statistics, etc.
    pass

def workflow_for_feature_engineering():
    # step 1: load data & preprocess data
    # step 2: engineer features (create new features, transform existing features, etc.)
    # step 3: sample analysis, summary statistics, etc.
    pass

def workflow_for_model_selection():
    # step 1: categorize inputs and outputs (features and labels)
    # step 2: research models suitable for the problem
    # step 3: select models to test
    # step 4: analyze model architecture and performance (overfitting, underfitting, etc.)
    # step 4: compare model performance and select best model
    pass

def workflow_for_model_design():
    # step 1: categorize inputs and outputs (features and labels)
    # step 2: design model architecture (layers, activation functions, etc.)
    # step 3: justify design decisions
    # step 4: research similar models and compare
    # step 5: note model performance and limitations
    pass

def workflow_for_model_training():
    # step 1: load data & preprocess data
    # step 2: compile model (loss function, optimizer, etc.)
    # step 3: train model (fit model to data)
    # step 4: test model training (overfitting, underfitting, etc.)
    # step 5: sample analysis, summary statistics, etc.
    pass

def workflow_for_model_evaluation():
    # step 1: load data
    # step 2: preprocess data
    # step 3: train model
    # step 4: evaluate model
    # step 5: test model evaluation
    # step 6: sample analysis, summary statistics, etc.
    pass

def workflow_for_model_tuning():
    # step 1: load data
    # step 2: preprocess data
    # step 3: train model
    # step 4: evaluate model
    # step 5: tune model
    # step 6: test model tuning
    # step 7: sample analysis, summary statistics, etc.
    pass

# # Workflow definition generated by AI (wtf?)
# def get_workflow():
#     return {
#         'name': 'workflow',
#         'version': '0.1',
#         'steps': [
#             {
#                 'name': 'load_data',
#                 'module': 'mykeras.tools.data',
#                 'function': 'load_data',
#                 'parameters': {
#                     'data_dir': 'data',
#                     'data_file': 'data.csv'
#                 }
#             },
#             {
#                 'name': 'preprocess_data',
#                 'module': 'mykeras.tools.data',
#                 'function': 'preprocess_data',
#                 'parameters': {
#                     'data': 'load_data'
#                 }
#             },
#             {
#                 'name': 'train_model',
#                 'module': 'mykeras.tools.model',
#                 'function': 'train_model',
#                 'parameters': {
#                     'data': 'preprocess_data'
#                 }
#             }
#         ]
#     }
